# Generated by Django 4.2.1 on 2025-08-24 11:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("customers", "0004_add_customer_note"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("customer_created", "New Customer Created"),
                            ("note_added", "Note Added"),
                            ("file_uploaded", "File Uploaded"),
                            ("manual", "Manual Trigger"),
                        ],
                        default="manual",
                        max_length=50,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "report_type",
                    models.CharField(default="customer_list", max_length=50),
                ),
                ("filters", models.JSONField(default=dict)),
                ("fields", models.JSONField(default=list)),
                ("grouping", models.JSONField(default=dict)),
                ("is_public", models.BooleanField(default=False)),
                ("is_scheduled", models.BooleanField(default=False)),
                ("schedule_frequency", models.CharField(blank=True, max_length=20)),
                ("last_generated", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("subject", models.CharField(max_length=300)),
                ("content", models.TextField()),
                ("html_content", models.TextField(blank=True)),
                ("available_variables", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EmailSequenceStep",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("step_number", models.IntegerField()),
                ("delay_days", models.IntegerField(default=0)),
                ("delay_hours", models.IntegerField(default=0)),
                (
                    "sequence",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="steps",
                        to="analytics.emailsequence",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.emailtemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["sequence", "step_number"],
            },
        ),
        migrations.CreateModel(
            name="EmailDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=300)),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("opened", "Opened"),
                            ("clicked", "Clicked"),
                            ("bounced", "Bounced"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("open_count", models.IntegerField(default=0)),
                ("click_count", models.IntegerField(default=0)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customers.customer",
                    ),
                ),
                (
                    "sent_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sequence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.emailsequence",
                    ),
                ),
                (
                    "sequence_step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.emailsequencestep",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="analytics.emailtemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-sent_at"],
            },
        ),
        migrations.CreateModel(
            name="DashboardMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "metric_type",
                    models.CharField(
                        choices=[
                            ("total_customers", "Total Customers"),
                            ("new_customers_today", "New Customers Today"),
                            ("new_customers_week", "New Customers This Week"),
                            ("new_customers_month", "New Customers This Month"),
                            ("active_customers", "Active Customers"),
                            ("top_cities", "Top Cities"),
                            ("engagement_rate", "Engagement Rate"),
                            (
                                "avg_profile_completeness",
                                "Average Profile Completeness",
                            ),
                        ],
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("value", models.JSONField(default=dict)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["metric_type", "calculated_at"],
                        name="analytics_d_metric__b54654_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerMetrics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_interactions", models.IntegerField(default=0)),
                ("last_interaction_date", models.DateTimeField(blank=True, null=True)),
                ("notes_count", models.IntegerField(default=0)),
                ("files_count", models.IntegerField(default=0)),
                ("engagement_score", models.FloatField(default=0.0)),
                ("profile_completeness", models.FloatField(default=0.0)),
                ("lead_score", models.FloatField(default=0.0)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="customers.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnalyticsEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("created", "Customer Created"),
                            ("updated", "Customer Updated"),
                            ("viewed", "Customer Viewed"),
                            ("note_added", "Note Added"),
                            ("file_uploaded", "File Uploaded"),
                            ("email_sent", "Email Sent"),
                            ("call_made", "Call Made"),
                            ("meeting_scheduled", "Meeting Scheduled"),
                            ("task_completed", "Task Completed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics_events",
                        to="customers.customer",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ReportExecution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("executed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("records_count", models.IntegerField(blank=True, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("error_message", models.TextField(blank=True)),
                ("execution_time", models.FloatField(blank=True, null=True)),
                (
                    "executed_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="executions",
                        to="analytics.report",
                    ),
                ),
            ],
            options={
                "ordering": ["-executed_at"],
                "indexes": [
                    models.Index(
                        fields=["report", "executed_at"],
                        name="analytics_r_report__38201b_idx",
                    ),
                    models.Index(
                        fields=["status", "executed_at"],
                        name="analytics_r_status_375b16_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["created_by", "created_at"],
                name="analytics_r_created_4f3e97_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="report",
            index=models.Index(
                fields=["is_scheduled", "schedule_frequency"],
                name="analytics_r_is_sche_fed38a_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="emailsequencestep",
            unique_together={("sequence", "step_number")},
        ),
        migrations.AddIndex(
            model_name="emaildelivery",
            index=models.Index(
                fields=["customer", "sent_at"], name="analytics_e_custome_c08ed6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emaildelivery",
            index=models.Index(
                fields=["status", "sent_at"], name="analytics_e_status_66838d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emaildelivery",
            index=models.Index(
                fields=["template", "sent_at"], name="analytics_e_templat_5c2948_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["engagement_score"], name="analytics_c_engagem_f09f54_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["lead_score"], name="analytics_c_lead_sc_5ceac0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customermetrics",
            index=models.Index(
                fields=["last_interaction_date"], name="analytics_c_last_in_4372cf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["customer", "timestamp"], name="analytics_a_custome_551ab6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["event_type", "timestamp"],
                name="analytics_a_event_t_64745b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="analyticsevent",
            index=models.Index(
                fields=["user", "timestamp"], name="analytics_a_user_id_5c8c13_idx"
            ),
        ),
    ]
