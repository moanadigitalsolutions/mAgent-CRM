# Generated by Django 4.2.1 on 2025-08-24 13:18

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("customers", "0004_add_customer_note"),
        ("analytics", "0003_customerscore_leadscoringrule_leadscoringconfig_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("project", "Project Work"),
                            ("maintenance", "Maintenance"),
                            ("repair", "Repair"),
                            ("installation", "Installation"),
                            ("custom", "Custom Service"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Start"),
                            ("in_progress", "In Progress"),
                            ("on_hold", "On Hold"),
                            ("review", "Under Review"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("due_date", models.DateTimeField(blank=True, null=True)),
                ("completed_date", models.DateTimeField(blank=True, null=True)),
                ("estimated_hours", models.FloatField(blank=True, null=True)),
                ("actual_hours", models.FloatField(blank=True, null=True)),
                (
                    "quoted_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "final_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "invoiced_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "paid_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("send_progress_updates", models.BooleanField(default=True)),
                ("send_completion_notification", models.BooleanField(default=True)),
                (
                    "update_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("milestone", "At Milestones"),
                            ("manual", "Manual Only"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="QuoteRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(blank=True, max_length=20, unique=True),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Brief description of the request", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Detailed description of what's needed"),
                ),
                (
                    "service_type",
                    models.CharField(
                        choices=[
                            ("consultation", "Consultation"),
                            ("project", "Project Work"),
                            ("maintenance", "Maintenance"),
                            ("repair", "Repair"),
                            ("installation", "Installation"),
                            ("custom", "Custom Service"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=50,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("received", "Received"),
                            ("reviewing", "Under Review"),
                            ("quoted", "Quote Sent"),
                            ("accepted", "Quote Accepted"),
                            ("declined", "Quote Declined"),
                            ("expired", "Quote Expired"),
                        ],
                        default="received",
                        max_length=20,
                    ),
                ),
                ("requested_date", models.DateTimeField(auto_now_add=True)),
                ("quote_due_date", models.DateTimeField(blank=True, null=True)),
                ("quote_valid_until", models.DateTimeField(blank=True, null=True)),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "final_quote_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("quote_notes", models.TextField(blank=True)),
                (
                    "original_email_subject",
                    models.CharField(blank=True, max_length=300),
                ),
                ("original_email_body", models.TextField(blank=True)),
                ("auto_response_sent", models.BooleanField(default=False)),
                ("quote_email_sent", models.BooleanField(default=False)),
                (
                    "source",
                    models.CharField(
                        default="email",
                        help_text="How this request was received",
                        max_length=50,
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("quote_sent_at", models.DateTimeField(blank=True, null=True)),
                ("response_received_at", models.DateTimeField(blank=True, null=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_quotes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_quotes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="quote_requests",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_type",
                    models.CharField(
                        choices=[
                            ("progress", "Progress Update"),
                            ("milestone", "Milestone Reached"),
                            ("issue", "Issue/Problem"),
                            ("completion", "Job Completed"),
                            ("on_hold", "Job On Hold"),
                            ("cancelled", "Job Cancelled"),
                        ],
                        default="progress",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("hours_worked", models.FloatField(blank=True, null=True)),
                (
                    "percentage_complete",
                    models.IntegerField(blank=True, help_text="0-100%", null=True),
                ),
                ("customer_notified", models.BooleanField(default=False)),
                ("email_sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job_updates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="updates",
                        to="analytics.job",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="job",
            name="quote_request",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="job",
                to="analytics.quoterequest",
            ),
        ),
        migrations.CreateModel(
            name="EmailAutoResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("quote_request", "Quote Request Received"),
                            ("quote_sent", "Quote Sent to Customer"),
                            ("quote_accepted", "Quote Accepted"),
                            ("job_started", "Job Started"),
                            ("job_progress", "Job Progress Update"),
                            ("job_completed", "Job Completed"),
                            ("job_delayed", "Job Delayed"),
                            ("follow_up", "Follow-up Required"),
                        ],
                        max_length=50,
                    ),
                ),
                ("subject_template", models.CharField(max_length=300)),
                ("body_template", models.TextField()),
                (
                    "service_types",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Service types this applies to",
                    ),
                ),
                (
                    "conditions",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional conditions"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "delay_minutes",
                    models.IntegerField(
                        default=0, help_text="Delay before sending (0 = immediate)"
                    ),
                ),
                ("send_to_customer", models.BooleanField(default=True)),
                ("send_to_team", models.BooleanField(default=False)),
                ("team_recipients", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["trigger_type", "name"],
            },
        ),
        migrations.AddIndex(
            model_name="quoterequest",
            index=models.Index(
                fields=["customer", "status"], name="analytics_q_custome_074d83_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quoterequest",
            index=models.Index(
                fields=["status", "created_at"], name="analytics_q_status_e982dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quoterequest",
            index=models.Index(
                fields=["service_type", "priority"],
                name="analytics_q_service_d842a8_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="quoterequest",
            index=models.Index(
                fields=["assigned_to", "status"], name="analytics_q_assigne_ef6105_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="jobupdate",
            index=models.Index(
                fields=["job", "created_at"], name="analytics_j_job_id_fdaeaf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="jobupdate",
            index=models.Index(
                fields=["update_type", "created_at"],
                name="analytics_j_update__498641_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["customer", "status"], name="analytics_j_custome_a66f12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["status", "due_date"], name="analytics_j_status_5183d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["assigned_to", "status"], name="analytics_j_assigne_3885bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="job",
            index=models.Index(
                fields=["service_type", "priority"],
                name="analytics_j_service_162985_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailautoresponse",
            index=models.Index(
                fields=["trigger_type", "is_active"],
                name="analytics_e_trigger_43bff6_idx",
            ),
        ),
    ]
